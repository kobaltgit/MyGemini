# File: config/logging.yaml
version: 1
disable_existing_loggers: False

# Регистрируем наш кастомный фильтр, чтобы YAML мог его найти
filters:
  user_id_filter:
    (): logger_config.UserIdContextFilter

formatters:
  standard:
    format: '%(asctime)s - %(name)s:%(lineno)d - %(levelname)s - [%(user_id)s] - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  simple:
    format: '%(asctime)s - %(levelname)s - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'

handlers:
  console:
    class: logging.StreamHandler
    level: DEBUG
    formatter: standard
    stream: ext://sys.stdout
    # Применяем фильтр ко всем обработчикам, использующим форматтер 'standard'
    filters: [user_id_filter]

  file_general:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: standard
    filename: logs/bot_general.log
    maxBytes: 10485760
    backupCount: 5
    encoding: utf-8
    filters: [user_id_filter] # <-- ДОБАВЛЕНО

  file_gemini:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: standard
    filename: logs/gemini_api.log
    maxBytes: 5242880
    backupCount: 3
    encoding: utf-8
    filters: [user_id_filter] # <-- ДОБАВЛЕНО

  file_database:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: standard
    filename: logs/database.log
    maxBytes: 5242880
    backupCount: 3
    encoding: utf-8
    filters: [user_id_filter] # <-- ДОБАВЛЕНО

  file_user_messages:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: standard
    filename: logs/user_messages.log
    maxBytes: 10485760
    backupCount: 5
    encoding: utf-8
    filters: [user_id_filter] # <-- ДОБАВЛЕНО

# Определяем логгеры
loggers:
  gemini_api:
    level: DEBUG
    handlers: [console, file_gemini]
    propagate: no

  database:
    level: DEBUG
    handlers: [console, file_database]
    propagate: no

  user_messages:
    level: INFO
    handlers: [console, file_user_messages]
    propagate: no

  # Логгер для telebot, чтобы отлавливать его сообщения
  telebot:
    level: INFO
    handlers: [console, file_general]
    propagate: no

  # Логгер для aiohttp, если понадобится отладка
  aiohttp:
    level: WARNING
    handlers: [console, file_general]
    propagate: no

  # Логгер для __main__
  __main__:
    level: INFO
    handlers: [console, file_general]
    propagate: no

# Настройки для корневого логгера
root:
  level: WARNING
  # Используем обработчик с фильтром, на случай если какой-то логгер не настроен и провалится в root
  handlers: [console, file_general]
