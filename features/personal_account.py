# --- START OF FILE features/personal_account.py ---
from datetime import datetime
from typing import Optional, List, Tuple, Dict, Any


# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ù–ê–ü–†–Ø–ú–£–Æ
from database.db_manager import (
    get_user_bot_style,
    get_conversation_count,
    get_first_interaction_date,
    get_conversation_history,
    get_user_reminders
)
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
from config.settings import BOT_STYLES
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ö–µ–ª–ø–µ—Ä—ã
from utils.analysis_helpers import extract_frequent_topics
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å Gemini
from services.gemini_service import generate_content_simple
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä
from logger_config import get_logger

from database import db_manager

from features.reminders import format_reminders_list

logger = get_logger(__name__, user_id='System')

USER_TITLES: Dict[int, str] = {
    0: "–ù–æ–≤–∏—á–æ–∫", 100: "–ê–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", 500: "–í–µ—Ç–µ—Ä–∞–Ω —á–∞—Ç–∞",
    1000: "–ú–∞—Å—Ç–µ—Ä –æ–±—â–µ–Ω–∏—è", 5000: "–õ–µ–≥–µ–Ω–¥–∞ –ë–µ—Å–µ–¥—ã",
}

def _get_user_title(message_count: int) -> str:
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∑–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π."""
    title: str = USER_TITLES[0]
    for messages, current_title in sorted(USER_TITLES.items(), reverse=True):
        if message_count >= messages:
            title = current_title
            break
    return title

def _get_days_since_start(first_interaction_date_str: Optional[str]) -> str:
    """–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π —Å –Ω–∞—á–∞–ª–∞ –æ–±—â–µ–Ω–∏—è."""
    if not first_interaction_date_str or not first_interaction_date_str.strip():
        return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    try:
        first_interaction_date = datetime.strptime(first_interaction_date_str, '%Y-%m-%d').date()
        days: int = (datetime.now().date() - first_interaction_date).days
        days = max(0, days)

        if 11 <= days % 100 <= 19: days_str = "–¥–Ω–µ–π"
        elif days % 10 == 1: days_str = "–¥–µ–Ω—å"
        elif 2 <= days % 10 <= 4: days_str = "–¥–Ω—è"
        else: days_str = "–¥–Ω–µ–π"
        return f"{days} {days_str}"
    except ValueError:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã –ø–µ—Ä–≤–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è: {first_interaction_date_str}")
        return "–û—à–∏–±–∫–∞ –¥–∞—Ç—ã"

def _get_topic_description(user_id: int) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ –æ—Ç Gemini."""
    user_id_str = str(user_id)
    print(f"DEBUG: -> –í—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è _get_topic_description –¥–ª—è user_id: {user_id}") # –ó–∞–º–µ–Ω–∏—Ç–µ logger.debug –Ω–∞ print
    # logger.debug(f"-> –í—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è _get_topic_description –¥–ª—è user_id: {user_id}", extra={'user_id': user_id_str}) # –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ logger.debug
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∫–∞–∫ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π
        conversation_history_raw: List[Dict[str, Any]] = get_conversation_history(user_id, limit=50)
        print(f"DEBUG: –ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤, –ø–æ–ª—É—á–µ–Ω–Ω–∞—è –∏–∑ –ë–î –¥–ª—è user_id {user_id}: {conversation_history_raw}") # –ó–∞–º–µ–Ω–∏—Ç–µ logger.debug –Ω–∞ print
        # logger.debug(f"–ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤, –ø–æ–ª—É—á–µ–Ω–Ω–∞—è –∏–∑ –ë–î –¥–ª—è user_id {user_id}: {conversation_history_raw}", extra={'user_id': user_id_str}) # –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ logger.debug

        if not conversation_history_raw:
             print(f"DEBUG: –ò—Å—Ç–æ—Ä–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –ø—É—Å—Ç–∞.") # –ó–∞–º–µ–Ω–∏—Ç–µ logger.debug –Ω–∞ print
             # logger.debug(f"–ò—Å—Ç–æ—Ä–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –ø—É—Å—Ç–∞.", extra={'user_id': user_id_str}) # –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ logger.debug
             return "–ü–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–º."

        # –ü–µ—Ä–µ–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π –Ω–∞–ø—Ä—è–º—É—é
        frequent_topics: List[str] = extract_frequent_topics(conversation_history_raw, top_n=7)
        print(f"DEBUG: –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ —Ç–µ–º—ã –¥–ª—è user_id {user_id}: {frequent_topics}") # –ó–∞–º–µ–Ω–∏—Ç–µ logger.debug –Ω–∞ print
        # logger.debug(f"–ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ —Ç–µ–º—ã –¥–ª—è user_id {user_id}: {frequent_topics}", extra={'user_id': user_id_str}) # –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ logger.debug

        if not frequent_topics:
            return "–ü–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–º."

        topics_str = ', '.join(frequent_topics)
        prompt = f"""–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —á–∞—Ç-–±–æ—Ç–æ–º: {topics_str}.
–ö—Ä–∞—Ç–∫–æ (–≤ 1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö) –æ–ø–∏—à–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±—Å—É–∂–¥–∞–µ—Ç —Å –±–æ—Ç–æ–º.
–°–¥–µ–ª–∞–π –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±–æ–±—â–µ–Ω–Ω—ã–º –∏ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º. –ù–∞—á–Ω–∏ –æ—Ç–≤–µ—Ç —Å–æ —Å–ª–æ–≤ '–ß–∞—â–µ –≤—Å–µ–≥–æ –≤—ã –æ–±—Å—É–∂–¥–∞–µ—Ç–µ —Å–æ –º–Ω–æ–π' –∏–ª–∏ '–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã –≤–∞—à–∏—Ö —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ —Å–æ –º–Ω–æ–π –∫–∞—Å–∞—é—Ç—Å—è'."""
        print(f"DEBUG: –ü—Ä–æ–º–ø—Ç –¥–ª—è Gemini –¥–ª—è user_id {user_id}: {prompt}") # –ó–∞–º–µ–Ω–∏—Ç–µ logger.debug –Ω–∞ print
        # logger.debug(f"–ü—Ä–æ–º–ø—Ç –¥–ª—è Gemini –¥–ª—è user_id {user_id}: {prompt}", extra={'user_id': user_id_str}) # –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ logger.debug

        ai_description: Optional[str] = generate_content_simple(prompt)

        if ai_description:
            return ai_description.strip()
        else:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–º –¥–ª—è {user_id} (Gemini –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç).", extra={'user_id': user_id_str})
            return f"–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ –≤–∞—à–∏—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö: {topics_str}"

    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–µ–º –¥–ª—è user_id {user_id}: {e}", extra={'user_id': user_id_str})
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–º—ã (–æ—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞)."

def get_personal_account_info(user_id: int) -> str:
    """
    –°–æ–±–∏—Ä–∞–µ—Ç –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user_id_str = str(user_id)
    print(f"DEBUG: –°–æ–±–∏—Ä–∞–µ–º—Å—è –≤—ã–∑–≤–∞—Ç—å _get_topic_description –¥–ª—è user_id: {user_id}")

    try:
        # --- –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î ---
        bot_style_code = 'default'
        try:
            # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å db_manager. ---
            bot_style_code = get_user_bot_style(user_id)
        except Exception as db_err:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è bot_style –¥–ª—è {user_id}: {db_err}", extra={'user_id': user_id_str})

        conversation_count = 0
        try:
            # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å db_manager. ---
            conversation_count = get_conversation_count(user_id)
        except Exception as db_err:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è conversation_count –¥–ª—è {user_id}: {db_err}", extra={'user_id': user_id_str})

        first_interaction_date_str: Optional[str] = None
        try:
            # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å db_manager. ---
            first_interaction_date_str = get_first_interaction_date(user_id)
        except Exception as db_err:
             logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è first_interaction_date –¥–ª—è {user_id}: {db_err}", extra={'user_id': user_id_str})

        # --- –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ---
        title: str = _get_user_title(conversation_count)
        days_active: str = _get_days_since_start(first_interaction_date_str)
        style_name: str = BOT_STYLES.get(bot_style_code, BOT_STYLES['default'])

        # --- –ü–æ–ª—É—á–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–º –æ—Ç –ò–ò ---
        print(f"DEBUG: –°–æ–±–∏—Ä–∞–µ–º—Å—è –≤—ã–∑–≤–∞—Ç—å _get_topic_description –¥–ª—è user_id: {user_id}")
        topics_description: str = _get_topic_description(user_id)

        # --- –ü–æ–ª—É—á–∞–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
        current_timezone = db_manager.get_user_timezone(user_id)

         # --- –ü–æ–ª—É—á–∞–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è --- <--- –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
        user_reminders: List[Dict[str, Any]] = []
        try:
            user_reminders = get_user_reminders(user_id) # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–∞–∫
        except Exception as db_err:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –¥–ª—è {user_id}: {db_err}", extra={'user_id': user_id_str})

        # --- –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç --- <--- –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
        reminders_text: str = format_reminders_list(user_reminders)

        # --- –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ ---
        info_text: str = f"""
üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç üë§

üèÜ –ó–≤–∞–Ω–∏–µ: {title}
üí¨ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {conversation_count}
üóìÔ∏è –í—ã —Å –Ω–∞–º–∏: {days_active}

--- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
üé® –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞: {style_name}
‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:
{reminders_text} 
---
üîß –£–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏ –≤—ã –º–æ–∂–µ—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª–µ '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è'
---
üïì –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {current_timezone} (–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ '–ù–∞—Å—Ç—Ä–æ–π–∫–∏')

--- –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ ---
üó£Ô∏è {topics_description}

--- –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ ---
‚ÑπÔ∏è –î–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π.*
        """

        logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ user_id: {user_id} —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞.", extra={'user_id': user_id_str})
        return "\n".join(line.strip() for line in info_text.strip().splitlines())

    except Exception as e:
        logger.exception(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –¥–ª—è user_id: {user_id}: {e}", extra={'user_id': user_id_str})
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤–∞—à–µ–≥–æ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

# --- END OF FILE features/personal_account.py ---